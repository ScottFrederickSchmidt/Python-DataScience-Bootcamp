'''
Recommender Systems Notes from Lecture:
'''
import numpy as np
import pandas as pd

columns_names=['user_id', 'item_id', 'rating', 'timestamp']
df=pd.read_csv('u.data', sep='\t', names=columns_names)

df.head()

movie_titles=pd.read_csv('Movie_Id_Titles')
df=pd.merge(df, movie_titles , on='item_id')

import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline
df.groupby('title')['rating'].mean() #gets every rating of movie
df.groupby('title')['rating'].count().sort_values(ascending=False).head()

ratings=pd.DataFrame(df.groupby('title')['rating'].mean())

ratings['num of ratings']=pd.DataFrame(df.groupby('title')['rating'].count())
ratings.head()

ratings['rating'].hist(bins=70)

sns.jointplot(x='rating',y='num of ratings', data=ratings, alpha=0.5) #more reviews=more ratings

'''
Recommender Systems:
'''
moviemat=df.pivot_table(index='user_id', columns='title', values='rating') #has lots of NA

ratings.sort_values('num of ratings', ascending=False).head(10)

starwars_user_ratings=moviemat['Star Wars (1997)']
liarliar_user_ratings=moviemat['Liar Liar (1997)']

similiar_to_starwars=moviemat.corrwith(starwars_user_ratings)
similiar_to_liarliar=moviemat.corrwith(liarliar_user_ratings)

corr_starwars=pd.DataFrame(similiar_to_starwars, columns=['Correlation'])
corr_starwars.dropna(inplace=True)

corr_starwars.sort_values('Correlation', ascending=False).head(10)

corr_starwars=corr_starwars.joint(ratings['num of ratings'])

corr_starwars[corr_starwars['num of ratings']>100].sort_values('Correlation', ascending=False).head()
#Empire Strikes back and Return of the Jedi has the highest correlation to Starwars

corr_liarliar=pd.DataFrame(similiar_to_liarliar, columns=['Correlation'])

corr_liarliar.dropna(inplace=True)
corr_liarliar=corr_liarliar.join(ratings['num of ratings'])
corr_liarliar[corr_liarliar['num of ratings']>100].sort_values('Correlation', ascending=False).head()
#The Mask has a descent correlation as its a comedy that stars Jim Carry
